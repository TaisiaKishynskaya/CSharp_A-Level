@model MVC.Models.Responses.PaginatedItemsResponse<MVC.ViewModels.CatalogViewModels.CatalogItemViewModel>
@{
    var brands = ViewBag.Brands as IEnumerable<SelectListItem>;
    var types = ViewBag.Types as IEnumerable<SelectListItem>;
    var selectedBrandIds = ViewBag.SelectedBrandIds as List<int>;
    var selectedTypeIds = ViewBag.SelectedTypeIds as List<int>;
    var totalPages = ViewBag.TotalPages;
}

<link rel="stylesheet" href="~/css/catalog.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="~/js/sidebar.js"></script>
<script src="~/js/pagination.js"></script>


<h1 class="catalog-title text-center mt-3">Catalog Items</h1>
<div class="container-fluid mx-auto" style="width: 97%;">
    <div class="row">
        <div class="col-2 d-lg-block d-none" id="sidebarContent">
            <h6>Pagination</h6>
            <hr />
            <a href="@Url.Action("Index", "Catalog", new { pageIndex = 1, pageSize = 6 })" class="sidebar-pagination-button sidebarOpen btn btn-outline-secondary m-2 w-25">6</a>
            <a href="@Url.Action("Index", "Catalog", new { pageIndex = 1, pageSize = 9 })" class="sidebar-pagination-button sidebarOpen btn btn-outline-secondary m-2 w-25">9</a>
            <a href="@Url.Action("Index", "Catalog", new { pageIndex = 1, pageSize = 12 })" class="sidebar-pagination-button sidebarOpen btn btn-outline-secondary m-2 w-25">12</a>
            <a href="@Url.Action("Index", "Catalog", new { pageIndex = 1, pageSize = 1 })" class="sidebar-pagination-button sidebarOpen btn btn-outline-secondary m-2 w-25">1</a>
            <hr />
            <h6>Brand Filter</h6>
            <form method="post" action="@Url.Action("Index", "Catalog")">
                @if (ViewBag.Brands != null && ViewBag.SelectedBrandIds != null)
                {
                    foreach (var brand in ViewBag.Brands)
                    {
                        <div class="form-check">
                            <input class="form-check-input sidebar-filter-button" type="checkbox" name="brandIds" value="@brand.Value" id="brand-@brand.Value" @(ViewBag.SelectedBrandIds.Contains(int.Parse(brand.Value)) ? "checked" : "")>
                            <label class="form-check-label" for="brand-@brand.Value">
                                @brand.Text
                            </label>
                        </div>
                    }
                }

                <hr />
                <h6>Type Filter</h6>

                @if (ViewBag.Types != null && ViewBag.SelectedTypeIds != null)
                {
                    foreach (var type in ViewBag.Types)
                    {
                        <div class="form-check">
                            <input class="form-check-input sidebar-filter-button" type="checkbox" name="typeIds" value="@type.Value" id="type-@type.Value" @(ViewBag.SelectedTypeIds.Contains(int.Parse(type.Value)) ? "checked" : "")>
                            <label class="form-check-label" for="type-@type.Value">
                                @type.Text
                            </label>
                        </div>
                    }
                }

                <button type="submit" class="btn btn-primary mt-2">Apply Filters</button>
            </form>

            <form method="post" action="@Url.Action("ResetFilters", "Catalog")" style="display:inline;">
                <button type="submit" class="btn btn-secondary mt-2">Reset Filters</button>
            </form>
        </div>

        <div class="col">
            <button class="sidebarOpen btn btn-outline-secondary d-lg-none m-2">Open Sidebar</button>
            <div class="row">
                <div class="col-12">
                    <!-- здесь будут элементы -->
                    @await Html.PartialAsync("_CatalogItems", Model.Data)
                    <!-- здесь будет пагинация -->
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Catalog", new { pageIndex = Model.PageIndex - 1, pageSize = Model.PageSize })"><i class="fas fa-arrow-left"></i></a>
                            </li>
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                if (i == Model.PageIndex || Math.Abs(Model.PageIndex - i) <= 2 || i == 1 || i == totalPages)
                                {
                                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", "Catalog", new { pageIndex = i, pageSize = Model.PageSize })">@i</a>
                                    </li>
                                }
                                else if (i == Model.PageIndex + 3 || i == Model.PageIndex - 3)
                                {
                                    <li class="page-item disabled">
                                        <a class="page-link">...</a>
                                    </li>
                                }
                            }
                            <li class="page-item @(Model.PageIndex == totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Catalog", new { pageIndex = Model.PageIndex + 1, pageSize = Model.PageSize })"><i class="fas fa-arrow-right"></i></a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="sidebar">
    <div class="d-flex justify-content-end">
        <button class="btn btn-light m-3" id="sidebarClose">Close Sidebar</button>
    </div>
    <div id="sidebarContentClone"></div>
</div>

<script>

    $(document).ready(function () {
        $('.sidebarOpen').click(function () {
            $('#sidebarContentClone').html($('#sidebarContent').html());
            $('#sidebar').fadeIn();
        });
        $('#sidebarClose').click(function () {
            $('#sidebar').fadeOut();
        });
    });

    // document.addEventListener('DOMContentLoaded', function () {
    //     var sidebarOpenButtons = document.querySelectorAll('.sidebarOpen');
    //     var sidebarCloseButton = document.querySelector('#sidebarClose');
    //     var sidebar = document.querySelector('#sidebar');
    //     var sidebarContent = document.querySelector('#sidebarContent');
    //     var sidebarContentClone = document.querySelector('#sidebarContentClone');

    //     sidebarOpenButtons.forEach(function (button) {
    //         button.addEventListener('click', function () {
    //             sidebarContentClone.innerHTML = sidebarContent.innerHTML;
    //             sidebar.style.display = 'block';
    //         });
    //     });

    //     sidebarCloseButton.addEventListener('click', function () {
    //         sidebar.style.display = 'none';
    //     });
    // });
</script>
